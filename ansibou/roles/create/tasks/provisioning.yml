- name: Criando Security Group
  local_action: 
    module: ec2_group
    name: "{{ security_group }}"
    description: Security Group Giropops
    region: "{{ region }}"
    profile: "{{ profile }}"
    rules: 
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 10250
      to_port: 10250
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
    rules_egress: 
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a Instancia EC2
  local_action: ec2
    group={{ security_group }}
    instance_type={{ instance_type }}
    image={{ image }}
    wait=true
    region={{ region }} 
    profile={{ profile }}
    keypair={{ keypair }}
    count={{ count }}
  register: ec2

- name: Adicionando a instancia ao diretorio temp
  add_host: name={{ item.public_ip }} groups=giropops-new
  with_items: "{{ ec2.instances }}"

- name: Adicionando o ip publico da instancia criada no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regex={{ item.public_ip }}
    insertafter="[ip_pub_kubernetes]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: Adicionando o ip privado da instancia criada no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regex={{ item.private_ip }}
    insertafter="[ip_priv_kubernetes]" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: Esperando o SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.instances }}"

- name: Adicionando um no me tag na instancia
  local_action: ec2_tag resource={{ item.id }} profile={{ profile }} region={{ region }} state=present
  with_items: "{{ ec2.instances }}"
  args: 
    tags:
      Name: ansible-day2

- name: Adicionando a maquina criada no know_hosts
  shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
  with_items: "{{ ec2.instances }}"
